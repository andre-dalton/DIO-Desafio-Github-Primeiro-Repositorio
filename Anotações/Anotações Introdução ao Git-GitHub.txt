SHA1 - código gerado pelo GIT para cada arquivo (caracter carcterístico)
Blob - objeto com tipo, tamanho, contém um /0 e o conteúdo do arquivo
tree - aramazena os blobs (e aponta para os mesmos) e também pode apontar p/ outras árvores
commit - aponta p/ uma árvore, para um commit anterior, para um autro e também para uma msg


dir -> listar os diretórios na pasta que se encontra
cd (change directory, cd/) -> nos leva para a base do diretório em que estivermos
cd Windows -> entra na pasta Windows
cd .. -> retrocede 1 npuvel da navegação de pastas
cls -> limpa o cmd (para o Git usasse o atalho Ctrl+l)
TAB -> autocompletar
mkdir "nome" -> cria pastas
echo -> imprime na tela o que foi digitado anteriormente
> -> joga a saída do comando anterior em um arquivo 
del -> deleta um arquivo de um diretório passado
seta pra cima (atalho) -> alcança os comandos usados anteriormente
rmdir -> remove diretório

ls -> listar os arquivos
git init -> inicia o git
git add -> move arquivos Untracked p/ a staged (add . ou add -A adiciona todos)
git commit -m "msg" -> envelopa os arquivos da staged em uma mensagem, criando-os no git commit
git status -> apresenta os status do arquivo
git remote -v -> mostra os repositórios remotos nos quais o repositório local está linkado
git checkout -b -> move de uma branch para outra (ex: main para master, etc)
git checkout -b nome da branch -> cria a branch e se move para a mesma
git merge -> se move para a branch de sua escolha e posteriormente, une as duas branches que vc deseja unir
git branch -> apresenta na tela as branchs associadas ao repositório em que você se encontra
git branch -m -> muda o nome da branch na qual você se encontra
git branch -m nome atual nome novo -> muda o nome de uma branch sem que você precise se mudar para ela
git branch -d nome da branch -> deleta a branch com o nome que veio depois
git stash save "Descrição" -> cria o stash, empurrando para eles os aquivos que você indicou
git stash list -> lista os arquivos que estão no stash
git stash pop (index do stash no array) -> "estoura" o stash, fazendo com que os arquivos que foram armazaneados lá voltem para a branch
git stash clear -> limpa um stash criado 
git log -> mostra o histórico do que foi realizado no repositório
: q -> permite sair das linhas do histórico do git log
git log nome da pasta -> apresenta o histórico da pasta em questão, ao invés de todo o repositório
git log nome do arquivo -> apresenta o histórico de um arquivo em questão, ao invés de todo o repositório
git log --online -> traz o histórico resumido por linhas
git log --graph -> traz as branchs em sistemas de linhas, onde pode se ver com maior clareza quando branchs foram criadas, ou fundidas a outras
gitk -> abre uma inteface gráfica que apresenta a interface do graph de forma mais visual
git reset --soft HEAD~posição que você deseja que fique o HEAD -> move os arquivos para o index
git reset --mixed HEAD~posição que você deseja que fique o HEAD -> move os arquivos para o working directory
git reset --hard HEAD~posição que você deseja que fique o HEAD -> limpa(exclui) os arquivos do commit (faz com que esse nunca tivesse existido)
git revert -> reverte um commit realizado anteriormente

ls -a -> mostar arquivos ocultos
staged - arquivos que estão se preparando para atuar, para executar uma ação
git config --global user.name "   " -> configura nome
git config --global user.email "   " -> configura e-mail
git config --global --unsetuser.name -> apaga nome
git config --global --unsetuser.email -> apaga e-mail
git remote add origin -> adiciona o https do repositório
git push origin master -> empurra os arquivos locais para o Github
git pull origin master -> faz a importação dos arquivos locais do Github
git clone https... -> clona um repositorio para a sua máquina

conventional commits(site)
semver(site)